function Board.new 6
push constant 5
call Memory.alloc 1
pop pointer 0
call Screen.clearScreen 0
pop temp 0
push constant 20
call Array.new 1
pop this 0
push constant 0
pop local 3
label WHILE_EXP0
push local 3
push constant 20
lt
not
if-goto WHILE_END0
push constant 20
call Array.new 1
pop local 5
push local 3
push this 0
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push constant 20
lt
not
if-goto WHILE_END1
push local 2
push local 5
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push local 3
call Painter.drawBlank 2
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push argument 0
lt
not
if-goto WHILE_END2
push constant 20
call Random.next 1
pop local 2
push constant 20
call Random.next 1
pop local 3
push pointer 0
push local 2
push local 3
call Board.get 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 2
push local 3
push constant 1
call Board.set 4
pop temp 0
push local 0
push constant 1
add
pop local 0
push local 2
push local 3
call Painter.drawBush 2
pop temp 0
label IF_FALSE0
goto WHILE_EXP2
label WHILE_END2
push constant 0
not
pop local 1
label WHILE_EXP3
push local 1
not
if-goto WHILE_END3
push constant 20
call Random.next 1
pop this 1
push constant 20
call Random.next 1
pop this 2
push pointer 0
push this 1
push this 2
call Board.get 3
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 1
push this 2
push constant 2
call Board.set 4
pop temp 0
push this 1
push this 2
call Painter.drawRabbit 2
pop temp 0
push constant 0
pop local 1
label IF_FALSE1
goto WHILE_EXP3
label WHILE_END3
push constant 0
not
pop local 1
label WHILE_EXP4
push local 1
not
if-goto WHILE_END4
push constant 20
call Random.next 1
pop this 3
push constant 20
call Random.next 1
pop this 4
push this 3
push this 1
sub
call Math.abs 1
push this 4
push this 2
sub
call Math.abs 1
call Math.max 2
pop local 4
push local 4
push constant 9
gt
push pointer 0
push this 3
push this 4
call Board.get 3
push constant 0
eq
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push this 3
push this 4
push constant 3
call Board.set 4
pop temp 0
push this 3
push this 4
call Painter.drawFox 2
pop temp 0
push constant 0
pop local 1
label IF_FALSE2
goto WHILE_EXP4
label WHILE_END4
push pointer 0
return
function Board.get 1
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
push argument 1
push constant 19
gt
or
push argument 2
push constant 0
lt
or
push argument 2
push constant 19
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 4
return
label IF_FALSE0
push argument 2
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 1
push local 0
add
pop pointer 1
push that 0
return
function Board.set 1
push argument 0
pop pointer 0
push argument 2
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 1
push local 0
add
push argument 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.getFoxX 0
push argument 0
pop pointer 0
push this 3
return
function Board.getFoxY 0
push argument 0
pop pointer 0
push this 4
return
function Board.getRabbitX 0
push argument 0
pop pointer 0
push this 1
return
function Board.getRabbitY 0
push argument 0
pop pointer 0
push this 2
return
function Board.moveFox 3
push argument 0
pop pointer 0
push this 3
push pointer 0
push argument 1
call Board.getDirX 2
add
pop local 0
push this 4
push pointer 0
push argument 1
call Board.getDirY 2
add
pop local 1
push pointer 0
push local 0
push local 1
call Board.get 3
pop local 2
push local 2
push constant 0
eq
push local 2
push constant 2
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push this 4
call Painter.drawBlank 2
pop temp 0
push pointer 0
push this 3
push this 4
push constant 0
call Board.set 4
pop temp 0
push local 0
pop this 3
push local 1
pop this 4
push this 3
push this 4
call Painter.drawFox 2
pop temp 0
push pointer 0
push this 3
push this 4
push constant 3
call Board.set 4
pop temp 0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Board.moveRabbit 2
push argument 0
pop pointer 0
push this 1
push pointer 0
push argument 1
call Board.getDirX 2
add
pop local 0
push this 2
push pointer 0
push argument 1
call Board.getDirY 2
add
pop local 1
push pointer 0
push local 0
push local 1
call Board.get 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push this 2
call Painter.drawBlank 2
pop temp 0
push pointer 0
push this 1
push this 2
push constant 0
call Board.set 4
pop temp 0
push local 0
pop this 1
push local 1
pop this 2
push this 1
push this 2
call Painter.drawRabbit 2
pop temp 0
push pointer 0
push this 1
push this 2
push constant 2
call Board.set 4
pop temp 0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Board.getDirX 0
push argument 0
pop pointer 0
push argument 1
push constant 2
lt
push argument 1
push constant 7
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
return
label IF_FALSE0
push argument 1
push constant 2
gt
push argument 1
push constant 6
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
neg
return
label IF_FALSE1
push constant 0
return
function Board.getDirY 0
push argument 0
pop pointer 0
push argument 1
push constant 0
gt
push argument 1
push constant 4
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
return
label IF_FALSE0
push argument 1
push constant 4
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
return
label IF_FALSE1
push constant 0
return
function Board.canMove 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
push argument 3
call Board.getDistance 4
push constant 1
gt
return
function Board.getBlockage 3
push argument 0
pop pointer 0
push pointer 0
push argument 3
call Board.getDirX 2
pop local 0
push pointer 0
push argument 3
call Board.getDirY 2
pop local 1
push argument 1
push local 0
add
pop argument 1
push argument 2
push local 1
add
pop argument 2
label WHILE_EXP0
push argument 1
push constant 1
neg
gt
push argument 1
push constant 20
lt
and
push argument 2
push constant 1
neg
gt
and
push argument 2
push constant 20
lt
and
not
if-goto WHILE_END0
push pointer 0
push argument 1
push argument 2
call Board.get 3
pop local 2
push local 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
return
label IF_FALSE0
push argument 1
push local 0
add
pop argument 1
push argument 2
push local 1
add
pop argument 2
goto WHILE_EXP0
label WHILE_END0
push constant 4
return
function Board.getDistance 3
push argument 0
pop pointer 0
push pointer 0
push argument 3
call Board.getDirX 2
pop local 0
push pointer 0
push argument 3
call Board.getDirY 2
pop local 1
push constant 1
pop local 2
push argument 1
push local 0
add
pop argument 1
push argument 2
push local 1
add
pop argument 2
label WHILE_EXP0
push argument 1
push constant 1
neg
gt
push argument 1
push constant 20
lt
and
push argument 2
push constant 1
neg
gt
and
push argument 2
push constant 20
lt
and
not
if-goto WHILE_END0
push pointer 0
push argument 1
push argument 2
call Board.get 3
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
return
label IF_FALSE0
push argument 1
push local 0
add
pop argument 1
push argument 2
push local 1
add
pop argument 2
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Board.foxWon 0
push argument 0
pop pointer 0
push this 3
push this 1
eq
push this 4
push this 2
eq
and
return
function Board.counter 0
push argument 0
pop pointer 0
push constant 1
push constant 32
call Output.moveCursor 2
pop temp 0
push argument 1
call Output.printInt 1
pop temp 0
push constant 0
return
function Board.report 0
push argument 0
pop pointer 0
push constant 2
push constant 32
call Output.moveCursor 2
pop temp 0
push constant 30
call String.new 1
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 2
push constant 32
call Output.moveCursor 2
pop temp 0
push argument 1
call Output.printString 1
pop temp 0
push constant 0
return
function Board.gameover 0
push argument 0
pop pointer 0
push constant 3
push constant 32
call Output.moveCursor 2
pop temp 0
push argument 1
call Output.printString 1
pop temp 0
push constant 0
return
